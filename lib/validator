#!/bin/bash

function __ovm_validator_packages {
    local func_name=$1 && shift
    local packages=("$@")
    
    for package in "${packages[@]}";
    do
        command -v "$package" >/dev/null 2>&1
        rc=$?
        if [[ $rc != 0 ]];
        then
            echo "$func_name: Package $package not installed."
            return 1
        fi
    done
}

function __ovm_validator_configs {
    local func_name=$1 && shift
    local configs=("$@")

    for config in "${configs[@]}";
    do
        if [ ! -f "$config" ];
        then
            echo "$func_name: Config file $config not found."
            return 1
        fi
    done
}

function __ovm_validator_directories {
    local func_name=$1 && shift
    local directories=("$@")

    for dir in "${directories[@]}";
    do
        if [ ! -d "$dir" ];
        then
            echo "$func_name: Mandatory directory $dir not found."
            return 1
        fi
    done
}

function __ovm_validator_envvar {
    if [ -n "$1" ];
    then
       if [ -z "${!1}" ];
       then
           echo "Environment variable \$${1} not defined." 
           if [ $# -eq 2 ];
           then
                local tips=$2
                echo "help: ${tips}"
           fi
           return 1
       fi
    fi
}

function __ovm_validator_parameters_len {
    local expected=$1
    local current=$2
    local usage=$3
    
    if [[ "$current" != "$expected" ]];
    then
        echo "$usage"
        return 1
    fi
}

function __ovm_validator_ip {
    local  ip=$1
    local  flag=1

    if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
        IFS=$'.'
        ip=($ip)
        unset IFS
        [[ ${ip[0]} -le 255 && ${ip[1]} -le 255 \
            && ${ip[2]} -le 255 && ${ip[3]} -le 255 ]]
        flag=$?
    fi
    return $flag
}
