#!/usr/bin/env bash
source "$OVM_PATH/lib/validator"

# ---------------------------------------
# Requirements
# ---------------------------------------
local packages=(cut grep sed tail xargs)
__ovm_validator_packages "${packages[@]}" || return

# ---------------------------------------
# Code
# ---------------------------------------
function __zk_aliases_completions {
  local limit=100
  local path="$OVM_ZK_GCONFIG";

  # If no global config set, will take the local NOTEBOOK one
  if [ -z $path ] || [ ! -f $path ]; then
    path="$ZK_NOTEBOOK_DIR/.zk/config.toml"
  fi

  [ -f $path ] || { echo "Configuration $path not found."; return 1; }

  local cur prev
  COMPREPLY=()
  cur=${COMP_WORDS[COMP_CWORD]}
  prev=${COMP_WORDS[COMP_CWORD-1]}


  if [ $COMP_CWORD -eq 1 ]; then
    local zk_aliases=$(grep -vE '^#' $path | sed -n '/\[alias\]/,/^\[/p' | sed '/^$/d' | awk -F '=' '!/^\[/{print $1}' | sort | xargs)
    COMPREPLY=( $(compgen -W "${zk_aliases}" -- $cur ) )
  elif [ $COMP_CWORD -eq 2 ]; then
    case $prev in
      "lt") # zk lt
        local zk_tags=$(zk tag list -f name -P -q 2>&1| xargs)
        COMPREPLY=( $(compgen -W "${zk_tags}" -- $cur ) )
        ;;
      *)
        ;;
    esac
  elif [ $COMP_CWORD -eq 3 ]; then
    case $prev in
      "-t") # zk gist -t
        local prev_prev=${COMP_WORDS[COMP_CWORD-2]}
        if [ "$prev_prev" = "gist" ]; then 
          local zk_gist_lang=$(zk list -t gist -f oneline -q 2>&1 | awk '{print $2}' | tr -d ':' | sort -u | xargs)
          COMPREPLY=( $(compgen -W "${zk_gist_lang}" -- $cur ) )
        fi
        ;;
      *)
        ;;
    esac
  fi

  return 0
}

complete -F __zk_aliases_completions zk

